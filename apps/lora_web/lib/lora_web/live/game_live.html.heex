<div
  class="min-h-screen w-full bg-raidal-spotlight p-6"
  id="game-container"
  phx-hook="TrickWinnerDelay"
>
  <%= if @loading do %>
    <div class="text-center py-24">
      <div class="inline-flex items-center px-6 py-3 bg-white/20 backdrop-blur-md rounded-xl">
        <svg
          class="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
        >
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
          </circle>
          <path
            class="opacity-75"
            fill="currentColor"
            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
          >
          </path>
        </svg>
        <span class="text-2xl font-semibold text-white">Loading game...</span>
      </div>
    </div>
  <% else %>
    <!-- Main flex layout: Game on left (larger), Info cards on right -->
    <div class="flex h-full gap-6">
      <!-- Game area on left - takes most of the space -->
      <div class="flex-1">
        <!-- Game board content -->
        <%= if !@player do %>
          <div class="text-center py-16">
            <div class="inline-block bg-white/30 backdrop-blur-md px-8 py-6 rounded-xl">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-12 w-12 text-white mx-auto mb-3"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
              <div class="text-2xl font-semibold text-white">Waiting for game to start...</div>
            </div>
          </div>
        <% else %>
          <!-- Game Board Content -->
          <div class="h-full flex flex-col justify-between">
            <!-- Game board - Centered layout with players around the center -->
            <div class="flex-grow flex flex-col items-center justify-between py-4">
              <% opponent_seats = LoraWeb.GameUtils.calculate_opponent_seats(@player.seat) %>
              
<!-- Top opponent -->
              <% player_seat = opponent_seats.top %>
              <div class="w-full max-w-2xl mx-auto mb-6">
                <div class="flex flex-col items-center">
                  <LoraWeb.PlayerComponents.player_plate
                    player={@player}
                    game={@game}
                    presences={@presences}
                    player_seat={player_seat}
                    size="medium"
                  />
                  <.card_stack player_seat={player_seat} game={@game} size="medium" />
                </div>
              </div>
              
<!-- Middle row - Left player, Center area, Right player -->
              <div class="w-full flex items-start justify-between mb-8 gap-4">
                <!-- Left player -->
                <% player_seat = opponent_seats.left %>
                <div class="w-1/4">
                  <div class="flex flex-col items-center">
                    <LoraWeb.PlayerComponents.player_plate
                      player={@player}
                      game={@game}
                      presences={@presences}
                      player_seat={player_seat}
                      size="medium"
                    />
                    <.card_stack player_seat={player_seat} game={@game} size="medium" />
                  </div>
                </div>
                
<!-- Center - Current trick or Lora layout -->
                <div
                  class="bg-green-900/1 rounded-full backdrop-blur-md shadow-[0_50px_60px_-15px_rgba(0,0,0,0.3)] p-4 size-[520px]"
                  style="transform: rotate3d(-1,0.5,0.5,60deg);"
                >
                  <%= if @current_contract == :lora do %>
                    <div class="text-white text-center font-semibold mb-3">Lora Layout</div>
                    <div class="grid grid-cols-1 gap-3">
                      <%= for suit <- [:clubs, :diamonds, :hearts, :spades] do %>
                        <div class="flex items-center">
                          <div class="w-6 text-white text-xl">{format_suit(suit)}</div>
                          <div class="flex flex-grow overflow-x-auto">
                            <%= for {card_suit, rank} <- @game.lora_layout[suit] || [] do %>
                              <div class={"card-mini flex items-center justify-center h-10 w-8 bg-white rounded-md mr-1 shadow-md #{suit_color(card_suit)}"}>
                                {format_rank(rank)}
                              </div>
                            <% end %>
                          </div>
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="relative h-full py-4 flex items-center justify-center">
                      <div class="text-center font-semibold mb-3 text-3xl text-yellow-300">
                        Current Trick
                      </div>
                      <% opponent_seats = LoraWeb.GameUtils.calculate_opponent_seats(@player.seat) %>
                      <%= for {seat, class} <- [
                        {@player.seat, "absolute transform -translate-x-1/2 bottom-4 left-1/2"},
                        {opponent_seats.top, "absolute transform -translate-x-1/2 top-4 left-1/2"},
                        {opponent_seats.left, "absolute transform -translate-y-1/2 top-1/2 left-4"},
                        {opponent_seats.right, "absolute transform -translate-y-1/2 top-1/2 right-4"}
                      ] do %>
                        <.current_trick_card class={class} seat={seat} game={@game} />
                      <% end %>
                    </div>
                  <% end %>
                </div>
                
<!-- Right player -->
                <div class="w-1/4">
                  <% opponent_seat_right = opponent_seats.right %>

                  <div class="flex flex-col items-center">
                    <LoraWeb.PlayerComponents.player_plate
                      player={@player}
                      game={@game}
                      presences={@presences}
                      player_seat={opponent_seat_right}
                      size="small"
                    />

                    <.card_stack player_seat={opponent_seat_right} game={@game} size="small" />
                  </div>
                </div>
              </div>
            </div>
            
<!-- Player area - emphasized at the bottom -->
            <.player_hand
              player={@player}
              game={@game}
              legal_moves={@legal_moves}
              current_contract={@current_contract}
            />
          </div>
        <% end %>
      </div>
      
<!-- Info panel on the right - stacked vertically -->
      <div class="w-80 flex flex-col gap-5">
        <!-- Game header - now on the right side -->
        <div class="card bg-gray-900/80 backdrop-blur-md rounded-xl shadow-2xl border border-gray-700">
          <div class="px-4 py-2 bg-gradient-to-r from-indigo-900 to-indigo-700 rounded-t-xl">
            <h3 class="text-sm font-medium text-white">Game</h3>
          </div>
          <div class="card-body p-4">
            <h1 class="text-lg leading-6 font-semibold mb-1">
              {Lora.Contract.name(@current_contract)}
            </h1>
            <p class="text-sm mb-3">
              {Lora.Contract.description(@current_contract)}
            </p>
            <div class="text-gray-300">
              <dl class="grid grid-cols-2 gap-x-2 gap-y-2">
                <dt class="text-xs font-medium">Dealer</dt>
                <dd class="text-xs font-semibold">
                  {find_player_name(@game, @game.dealer_seat)}
                </dd>
                <dt class="text-xs font-medium">Phase</dt>
                <dd class="text-xs font-semibold capitalize">
                  {to_string(@game.phase)}
                </dd>
                <dt class="text-xs font-medium">Deal</dt>
                <dd class="text-xs font-semibold">{@game.dealt_count} / 28</dd>
              </dl>
            </div>
          </div>
        </div>
        
<!-- Scoreboard - now stacked on right -->
        <div class="card bg-gray-900/80 backdrop-blur-md rounded-xl shadow-2xl border border-gray-700">
          <div class="px-4 py-2 bg-gradient-to-r from-indigo-900 to-indigo-700 rounded-t-xl">
            <h3 class="text-sm font-medium text-white">Scoreboard</h3>
          </div>
          <div class="card-body p-4">
            <table class="table">
              <thead>
                <tr>
                  <th class="text-gray-400 p-1 uppercase tracking-wider">
                    Player
                  </th>
                  <th class="text-gray-400 p-1 text-right uppercase tracking-wider">
                    Score
                  </th>
                </tr>
              </thead>
              <tbody>
                <%= for p <- @game.players do %>
                  <tr class={if p.seat == @player.seat, do: "bg-amber-50/10"}>
                    <td class="px-2 py-1.5 whitespace-nowrap">
                      {p.name}
                      <%= if p.seat == @player.seat do %>
                        <.icon name="hero-user-solid w-5 h-5" />
                      <% end %>
                      <%= if p.seat == @game.dealer_seat do %>
                        <span class="w-5 h-5">ðŸŽ²</span>
                      <% end %>
                    </td>
                    <td class="px-2 py-1.5 whitespace-nowrap text-right">
                      {Map.get(@game.scores, p.seat, 0)}
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <style>
    .hearts, .diamonds {
      color: #dc2626; /* Tailwind red-600 */
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    .clubs, .spades {
      color: #1f2937; /* Tailwind gray-800 */
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    .card-mini {
      font-size: 0.6rem;
      line-height: 0.8rem;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .bg-table {
      background-image: radial-gradient(circle, #2f855a 0%, #1a4731 100%);
    }
    .card {
      position: relative;
      box-shadow: 0 4px 10px -1px rgba(0, 0, 0, 0.1), 0 2px 6px -1px rgba(0, 0, 0, 0.06);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      transform-origin: center bottom;
    }
    .card:hover {
      transform: translateY(-12px) scale(1.03);
      box-shadow: 0 15px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      z-index: 10;
    }
    .card span {
      transition: all 0.2s ease;
    }
    .card:hover span {
      transform: scale(1.05);
    }

    /* Card throwing animations */
    @keyframes throw-from-bottom {
      0% {
        transform: translateY(120px) translateX(20px) rotate(8deg);
        opacity: 0;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
      }
      30% {
        transform: translateY(30px) translateX(5px) rotate(3deg);
        opacity: 0.8;
        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
      }
      100% {
        transform: translateY(0) translateX(0) rotate(0deg);
        opacity: 1;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      }
    }

    @keyframes throw-from-top {
      0% {
        transform: translateY(-120px) translateX(-15px) rotate(-10deg);
        opacity: 0;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
      }
      30% {
        transform: translateY(-30px) translateX(-5px) rotate(-5deg);
        opacity: 0.8;
        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
      }
      100% {
        transform: translateY(0) translateX(0) rotate(0deg);
        opacity: 1;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      }
    }

    @keyframes throw-from-left {
      0% {
        transform: translateY(15px) translateX(-120px) rotate(-20deg);
        opacity: 0;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
      }
      30% {
        transform: translateY(5px) translateX(-30px) rotate(-10deg);
        opacity: 0.8;
        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
      }
      100% {
        transform: translateY(0) translateX(0) rotate(0deg);
        opacity: 1;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      }
    }

    @keyframes throw-from-right {
      0% {
        transform: translateY(-10px) translateX(120px) rotate(20deg);
        opacity: 0;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
      }
      30% {
        transform: translateY(-5px) translateX(30px) rotate(10deg);
        opacity: 0.8;
        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
      }
      100% {
        transform: translateY(0) translateX(0) rotate(0deg);
        opacity: 1;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      }
    }

    .card-throw-bottom {
      animation: throw-from-bottom 0.65s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
      animation-delay: 0.05s;
      z-index: 10;
      transform-origin: center bottom;
    }

    .card-throw-top {
      animation: throw-from-top 0.7s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
      animation-delay: 0.1s;
      z-index: 10;
      transform-origin: center top;
    }

    .card-throw-left {
      animation: throw-from-left 0.75s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
      animation-delay: 0.15s;
      z-index: 10;
      transform-origin: left center;
    }

    .card-throw-right {
      animation: throw-from-right 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
      animation-delay: 0.2s;
      z-index: 10;
      transform-origin: right center;
    }

    /* Add a fade-in-only animation for when cards appear without throwing animation */
    @keyframes fade-in {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .animate-in {
      opacity: 0;
      animation: fade-in 0.3s ease-out forwards;
    }

    /* Trick winner animation */
    @keyframes winner-glow {
      0% {
        box-shadow: 0 0 5px #facc15, 0 0 10px #facc15, 0 0 15px #facc15;
        transform: scale(1);
      }
      50% {
        box-shadow: 0 0 10px #facc15, 0 0 20px #facc15, 0 0 30px #facc15;
        transform: scale(1.05);
      }
      100% {
        box-shadow: 0 0 5px #facc15, 0 0 10px #facc15, 0 0 15px #facc15;
        transform: scale(1);
      }
    }

    @keyframes highlight-pulse {
      0% { opacity: 0.4; }
      50% { opacity: 0.9; }
      100% { opacity: 0.4; }
    }

    @keyframes fade-out {
      0% { opacity: 1; }
      100% { opacity: 0; transform: scale(0.8); }
    }

    .winner-card {
      animation: throw-from-bottom 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
      z-index: 20;
    }

    .winner-glow-active {
      animation: winner-glow 2s ease-in-out;
      box-shadow: 0 0 10px #facc15, 0 0 20px #facc15, 0 0 30px #facc15;
    }

    .winner-highlight {
      background-color: #facc15; /* yellow-500 */
      opacity: 0;
      box-shadow: 0 0 10px 2px #facc15;
    }

    .highlight-active {
      animation: highlight-pulse 2s ease-in-out;
      opacity: 0.7;
    }

    .fade-out {
      animation: fade-out 0.5s ease-out forwards;
    }
  </style>
</div>
