name: Lora CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.18.2" # [Required] Define the Elixir version
          otp-version: "27.2.1" # [Required] Define the Erlang/OTP version

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Run formatter check
        run: mix format --check-formatted

      - name: Compile (with warnings as errors)
        run: mix compile --warnings-as-errors

      #   - name: Run Dialyzer
      #     run: mix dialyzer

      - name: Run tests with coverage
        run: mix test.with_coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: |
            cover/
          retention-days: 21

  dockerize:
    name: Build and Publish Docker image
    needs: [test]
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.save-image-tag.outputs.image_tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate version
        id: version
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "docker_version=${TIMESTAMP}-${SHORT_SHA}" >> $GITHUB_OUTPUT

      # Only login to registry if we're on main branch
      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          # Only push if we're on main branch
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.docker_version }}
            ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) || '' }}
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.docker_version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }}
            PROJECTS_URL=${{ vars.PROJECTS_URL }}
            ACCOUNTS_URL=${{ vars.ACCOUNTS_URL }}
      # Save image tag for deployment workflow
      - name: Save build info
        id: save-image-tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.docker_version }}"
          echo "$IMAGE_TAG" > build-info.txt
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Upload build info
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build-info.txt
          retention-days: 1
